/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "io.spring.gradle:tomcat-gradle-plugin:0.0.1-SNAPSHOT"
	}
}

apply plugin: 'war'
apply plugin: 'io.spring.tomcat'

repositories {
	mavenCentral()
	maven { url "https://repository.apache.org/content/repositories/orgapachetomcat-1257/" }
}

configurations {
	tc
}

dependencies {
	tc 'org.apache.tomcat.embed:tomcat-embed-core:9.+'
	tc 'org.apache.tomcat.embed:tomcat-embed-jasper:9.+'
	tc "javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.+"
	tc "org.apache.taglibs:taglibs-standard-jstlel:1.+"
	tc 'javax.servlet.jsp:javax.servlet.jsp-api:2.+'

	compile platform('org.springframework.boot:spring-boot-dependencies:2.2.0.RELEASE')
	compile 'org.springframework.security:spring-security-config'
	compile 'org.springframework.security:spring-security-web'
	compile "javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.+"
	compile "org.apache.taglibs:taglibs-standard-jstlel:1.+"
	compile 'javax.servlet.jsp:javax.servlet.jsp-api:2.+'

	compile 'javax.servlet:javax.servlet-api'

	testCompile 'org.springframework.security:spring-security-test'
	testCompile 'org.skyscreamer:jsonassert'
	testCompile 'org.springframework:spring-test'

	testCompile "org.seleniumhq.selenium:htmlunit-driver"
	testCompile "org.seleniumhq.selenium:selenium-support"
	testCompile "org.seleniumhq.selenium:selenium-support"
	testCompile "org.assertj:assertj-core"
	testCompile "junit:junit"
}

tomcat {
	def files = project.configurations.tc.files
	println files
//	parentLoader = new URLClassLoader(files*.toURL().toArray(new URL[0]), tomcat.class.classLoader)
}

test.doFirst {
	tasks.tomcat.setHttpPort(8080)
	def tomcat = tasks.tomcat.start()
	println "Started up on port $tomcat.connector"
	test.systemProperty("app.httpPort", tomcat.port)
}
